apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: build-and-push-image-with-kaniko
  namespace: planton-cloud-pipelines
spec:
  description: >
    A Pipeline to build and push an image using Kaniko.
  params:
    - name: git-url
      type: string
      description: "The Git URL to clone"
    - name: git-revision
      type: string
      description: "Git revision to checkout"
      default: "main"
    - name: setup-package-credentials
      type: string
      description: "Set to 'true' to run setup-package-credentials task"
      default: "false"
    - name: image-name
      type: string
      description: "The full destination image (registry/repo:tag)"
    - name: dockerfile-path
      type: string
      description: "Relative path to your Dockerfile"
      default: "Dockerfile"
    - name: kustomize-manifests-config-map-name
      type: string
      description: "Name of the config-map to store service manifests generated by kustomize"
    - name: project-root
      type: string
      description: "Relative path to the project's root inside the cloned repo"
      default: "."

  workspaces:
    - name: source
      description: "Workspace where source code is cloned"
    - name: package-credentials
      description: "Workspace that stores package-credentials required for build"

  tasks:
    ########################################################################
    # 1) Clone source from Git
    ########################################################################
    - name: git-checkout
      taskRef:
        resolver: hub
        params:
          - name: type
            value: tekton
          - name: kind
            value: task
          - name: name
            value: git-clone
          - name: version
            value: "0.9"
      params:
        - name: url
          value: "$(params.git-url)"
        - name: revision
          value: "$(params.git-revision)"
        - name: deleteExisting
          value: "true"
      workspaces:
        - name: output
          workspace: source

    ########################################################################
    # 2) Setup package credentials (optional)
    ########################################################################
    - name: setup-package-credentials
      when:
        - input: "$(params.setup-package-credentials)"
          operator: in
          values: [ "true" ]
      runAfter:
        - git-checkout
      taskSpec:
        workspaces:
          - name: source
          - name: package-credentials
        steps:
          - name: copy
            image: alpine:3
            script: |
              mkdir -p /workspace/source/.package-credentials
              cp /workspace/package-credentials/* /workspace/source/.package-credentials/ || true
      workspaces:
        - name: source
        - name: package-credentials

    ########################################################################
    # Build Image w/ Kaniko using Dockerfile
    # Now uses Tekton Hub's Kaniko Task, version 0.6, with Kaniko v1.23.2
    ########################################################################
    - name: build-image
      runAfter:
        - setup-package-credentials
      taskRef:
        resolver: hub
        params:
          - name: type
            value: tekton
          - name: kind
            value: task
          - name: name
            value: kaniko
          - name: version
            value: "0.7"

      params:
        - name: IMAGE
          value: "$(params.image-name)"
        - name: DOCKERFILE
          value: "$(params.project-root)/$(params.dockerfile-path)"   # CHANGED
        - name: CONTEXT
          value: "$(params.project-root)"                            # CHANGED
        - name: BUILDER_IMAGE
          value: "gcr.io/kaniko-project/executor:v1.23.2"
      workspaces:
        - name: source
          workspace: source
        # If needed, you can also provide a 'dockerconfig' workspace for registry auth.

    ########################################################################
    # 4) Kustomize build
    ########################################################################
    - name: kustomize-build
      runAfter:
        - git-checkout
      taskRef:
        resolver: git
        params:
          - name: url
            value: "https://github.com/plantoncloud/tekton-hub.git"
          - name: revision
            value: "main"
          - name: pathInRepo
            value: "tasks/kustomize-build.yaml"
      params:
        - name: config-map-name
          value: "$(params.kustomize-manifests-config-map-name)"
        - name: config-map-namespace
          value: "planton-cloud-pipelines"
        - name: project-root
          value: "$(params.project-root)"
      workspaces:
        - name: source
          workspace: source
