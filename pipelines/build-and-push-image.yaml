###############################################################################
# Tekton Pipeline using CEL in WhenExpressions
###############################################################################
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: build-and-push-image-cel
  namespace: planton-cloud-pipelines
spec:
  params:
    - name: git-url
      type: string
      description: "The Git URL to clone"

    - name: git-revision
      type: string
      description: "Git revision to checkout"
      default: "main"

    - name: image-name
      type: string
      description: "The final image name to be built/pushed"

    - name: environments
      type: array
      default: []
      description: |
        List of environment names. If empty ( [] ), the generate-service-manifests 
        task will be skipped via CEL expression.

  workspaces:
    - name: source
      description: "Workspace that stores source code & build artifacts"

  tasks:
    #################################################################
    # 1) GIT-CHECKOUT
    #################################################################
    - name: git-checkout
      taskRef:
        resolver: hub
        params:
          - name: type
            value: tekton
          - name: kind
            value: task
          - name: name
            value: git-clone
          - name: version
            value: "0.9"
      params:
        - name: url
          value: "$(params.git-url)"
        - name: revision
          value: "$(params.git-revision)"
        - name: deleteExisting
          value: "true"
      workspaces:
        - name: output
          workspace: source

    #################################################################
    # 2) BUILD-IMAGE (with Buildpacks) - Optional Example
    #################################################################
    - name: build-image
      runAfter:
        - git-checkout
      taskRef:
        resolver: hub
        params:
          - name: type
            value: tekton
          - name: kind
            value: task
          - name: name
            value: buildpacks
          - name: version
            value: "0.6"
      params:
        - name: BUILDER_IMAGE
          value: "paketobuildpacks/builder:base"
        - name: PROCESS_TYPE
          value: ""
        - name: PATH
          value: "."
        - name: APP_IMAGE
          value: "$(params.image-name)"
        - name: PUSH_IMAGE
          value: "false"
      workspaces:
        - name: source
          workspace: source

    #################################################################
    # 3) GENERATE-SERVICE-MANIFESTS (Using CEL to skip if empty)
    #################################################################
    - name: generate-service-manifests
      runAfter:
        - git-checkout
      # Tekton currently does NOT support whole-array substitution in CEL
      # The Tekton documentation (as of early 2025) explicitly says:
      # Whole Array and Object replacements are not supported yet.
      # That means you cannot do something like:
      # if environments is declared as type: array. Tekton will treat $(params.environments) as a string (e.g., ["dev","prod"]) 
      # and attempt to evaluate .size() on that string, or it might outright fail validation because it 
      # doesnâ€™t support substituting the entire array.
      # so disabling the when check for now
      # when:
      #   - cel: "size($(params.environments)) > 1"
      taskRef:
        resolver: git
        params:
          - name: url
            value: "https://github.com/plantoncloud/tekton-hub.git"
          - name: revision
            value: "main"
          - name: pathInRepo
            value: "pipelines/tasks/generate-service-manifests.yaml"
      params:
        - name: environments
          value: "$(params.environments)"
        - name: kustomizeDir
          value: "./_kustomize"
      workspaces:
        - name: source
          workspace: source
