apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: build-and-push-image-with-buildpacks
  namespace: planton-cloud-pipelines
spec:
  description: >
    A Pipeline to build and push an image using Buildpacks.
  params:
    - name: git-url
      type: string
      description: "The Git URL to clone"
    - name: git-revision
      type: string
      description: "Git revision to checkout"
      default: "main"
    - name: setup-package-credentials
      type: string
      description: "Set to 'true' to run setup-package-credentials task"
      default: "false"
    - name: image-name
      type: string
      description: "The full destination image (registry/repo:tag)"
    - name: buildpacks-builder-image
      type: string
      description: "Builder image for Buildpacks"
      default: "paketobuildpacks/builder-jammy-base"
    - name: kustomize-manifests-config-map-name
      type: string
      description: "Name of the config-map to store service manifests generated by kustomize"
    - name: project-root
      type: string
      description: "Relative path to the project's root inside the cloned repo"
      default: "."
    - name: sparse-checkout-directories
      type: string
      description: "list of comma separated directory patterns to git-clone Task's sparseCheckoutDirectories param"
      default: ""
    - name: kustomize-base-directory
      type: string
      description: "Relative path to the kustomize base directory inside project root"
      default: "_kustomize"
    - name: owner-identifier-label-key
      type: string
      description: Optional owner identifier label key to add to the ConfigMap
      default: ""
    - name: owner-identifier-label-value
      type: string
      description: Optional owner identifier label value
      default: ""

  workspaces:
    - name: source
      description: "Workspace where source code is cloned"
    - name: package-credentials
      description: "Workspace that stores package-credentials required for build"

  tasks:
    ########################################################################
    # 1) Clone source from Git
    ########################################################################
    - name: git-checkout
      taskRef:
        resolver: hub
        params:
          - name: type
            value: tekton
          - name: kind
            value: task
          - name: name
            value: git-clone
          - name: version
            value: "0.9"
      params:
        - name: url
          value: "$(params.git-url)"
        - name: revision
          value: "$(params.git-revision)"
        - name: deleteExisting
          value: "true"
        - name: sparseCheckoutDirectories
          value: "$(params.sparse-checkout-directories)"
        - name: gitInitImage
          value: "ghcr.io/tektoncd/github.com/tektoncd/pipeline/cmd/git-init:v0.45.0"
      workspaces:
        - name: output
          workspace: source

    ########################################################################
    # 2) Setup package credentials (optional)
    ########################################################################
    - name: setup-package-credentials
      when:
        - input: "$(params.setup-package-credentials)"
          operator: in
          values: ["true"]
      runAfter:
        - git-checkout
      taskSpec:
        workspaces:
          - name: source
          - name: package-credentials
        steps:
          - name: copy
            image: alpine:3
            script: |
              mkdir -p /workspace/source/.package-credentials
              cp /workspace/package-credentials/* /workspace/source/.package-credentials/ || true
      workspaces:
        - name: source
        - name: package-credentials

    ########################################################################
    # 3) Build Image w/ Buildpacks
    ########################################################################
    - name: build-image
      runAfter:
        - setup-package-credentials
      taskRef:
        resolver: git
        params:
          - name: url
            value: "https://github.com/plantoncloud/tekton-hub.git"
          - name: revision
            value: "main"
          - name: pathInRepo
            value: "tasks/buildpacks.yaml"
      params:
        - name: BUILDER_IMAGE
          value: "$(params.buildpacks-builder-image)"
        - name: APP_IMAGE
          value: "$(params.image-name)"
        - name: SOURCE_SUBPATH
          value: "$(params.project-root)"
        - name: PROCESS_TYPE
          value: ""
        - name: ENV_VARS
          value:
            - "GOOGLE_APPLICATION_CREDENTIALS=/workspace/source/.package-credentials/google-service-account.json"
      workspaces:
        - name: source
          workspace: source

    ########################################################################
    # 4) Kustomize build
    ########################################################################
    - name: kustomize-build
      runAfter:
        - git-checkout
      taskRef:
        resolver: git
        params:
          - name: url
            value: "https://github.com/plantoncloud/tekton-hub.git"
          - name: revision
            value: "main"
          - name: pathInRepo
            value: "tasks/kustomize-build.yaml"
      params:
        - name: config-map-name
          value: "$(params.kustomize-manifests-config-map-name)"
        - name: config-map-namespace
          value: "planton-cloud-pipelines"
        - name: project-root
          value: "$(params.project-root)"
        - name: kustomize-base-directory
          value: "$(params.kustomize-base-directory)"
        - name: owner-identifier-label-key
          value: "$(params.owner-identifier-label-key)"
        - name: owner-identifier-label-value
          value: "$(params.owner-identifier-label-value)"
      workspaces:
        - name: source
          workspace: source
